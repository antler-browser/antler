// Auto-generated by scripts/minify-webview-js.js
// DO NOT EDIT - Run 'yarn minify-webview' to regenerate

export const minifiedMainTemplate = "var b=(y,c,s)=>new Promise((g,w)=>{var f=t=>{try{r(s.next(t))}catch(n){w(n)}},e=t=>{try{r(s.throw(t))}catch(n){w(n)}},r=t=>t.done?g(t.value):Promise.resolve(t.value).then(f,e);r((s=s.apply(y,c)).next())});(function(){var y=\"__WEBVIEW_PUBLIC_KEY__\";function c(e){for(var r=atob(e),t=new Uint8Array(r.length),n=0;n<r.length;n++)t[n]=r.charCodeAt(n);return t}function s(e){var r=Object.keys(e).sort();return JSON.stringify(e,r)}function g(){if(crypto.randomUUID)return crypto.randomUUID();var e=new Uint8Array(16);return crypto.getRandomValues(e),Array.from(e,function(r){return(\"0\"+r.toString(16)).slice(-2)}).join(\"\")}function w(e){return b(this,null,function*(){if(typeof crypto==\"undefined\"||!crypto.subtle)return console.error(\"[IRL Browser] crypto.subtle not available - cannot verify signatures\"),!1;if(!e.signature)return console.error(\"[IRL Browser] Response missing signature - possible forgery attempt\"),!1;try{var r=e.signature,t={type:e.type,requestId:e.requestId,timestamp:e.timestamp};e.jwt!==void 0&&(t.jwt=e.jwt),e.result!==void 0&&(t.result=e.result);var n=s(t),l=new TextEncoder().encode(n),a=c(r),u=c(y),v=yield crypto.subtle.importKey(\"raw\",u,{name:\"ECDSA\",namedCurve:\"P-256\"},!1,[\"verify\"]),o=yield crypto.subtle.verify({name:\"ECDSA\",hash:\"SHA-256\"},v,a,l);return o||console.error(\"[IRL Browser] Signature verification failed - possible XSS forgery attempt\"),o}catch(d){return console.error(\"[IRL Browser] Error verifying signature:\",d),!1}})}function f(e,r,t){return new Promise(function(n,l){var a=!1,u,v=g();function o(I){return b(this,null,function*(){if(I.data){var i=I.data;if(typeof i==\"string\")try{i=JSON.parse(i)}catch(E){return}if(i.requestId===v){if(!(yield w(i))){a||(a=!0,clearTimeout(u),window.removeEventListener(\"message\",o,!0),l(new Error(\"Invalid signature - possible XSS forgery attempt\")));return}if(i.type===e+\":response\")a||(a=!0,clearTimeout(u),window.removeEventListener(\"message\",o,!0),n(i.jwt||i.result));else if(i.type===e+\":error\"&&!a){a=!0,clearTimeout(u),window.removeEventListener(\"message\",o,!0);var p=\"Request failed\";i.error&&(typeof i.error==\"object\"&&i.error.message?p=i.error.message:typeof i.error==\"string\"&&(p=i.error)),l(new Error(p))}}}})}window.addEventListener(\"message\",o,!0);var d={type:e,requestId:v};for(var m in r)r.hasOwnProperty(m)&&(d[m]=r[m]);window.ReactNativeWebView.postMessage(JSON.stringify(d)),u=setTimeout(function(){a||(a=!0,window.removeEventListener(\"message\",o,!0),l(new Error(\"Request timed out\")))},t||1e4)})}window.irlBrowser||Object.defineProperty(window,\"irlBrowser\",{value:Object.freeze({getProfileDetails:function(){return f(\"irl:api:getProfileDetails\",{})},getAvatar:function(){return f(\"irl:api:getAvatar\",{})},getBrowserDetails:function(){return __BROWSER_INFO__},requestPermission:function(e){return f(\"irl:api:requestPermission\",{permission:e})},close:function(){window.ReactNativeWebView.postMessage(JSON.stringify({type:\"irl:api:close\"}))}}),writable:!1,configurable:!1,enumerable:!0}),console.log(\"[IRL Browser] WebView API injected\")})();true;";
